# vi: ft=ruby
# frozen_string_literal: true

begin
  require 'awesome_print'
  # require 'table_print'
  require 'pry-byebug'
  # require 'pry-inline'
  # require 'pry-doc'
  # require 'pry-rescue'
rescue LoadError; end
# Environment specific
hist_file = "#{ENV['PWD']}/.pry_history"
unless File.exist?(hist_file)
  require 'fileutils'
  FileUtils.touch(hist_file)
end

# Pry.config.pager = false

# Pry specific
Pry.config.history_file = hist_file
Pry.config.prompt_name  = File.basename(Dir.pwd)
Pry.config.pager        = false

Pry.config.commands.alias_command 'lM', 'ls -M'
Pry.config.commands.alias_command 'lm', 'ls -m'

Pry::Commands.command /^$/, 'repeat last command' do
  # behaves almost like byebug in debugging
  pry_instance.run_command(Pry.history.to_a.last)
end

# Plugin specific
if defined?(PryByebug)
  # behaves almost like byebug
  Pry.commands.alias_command 'c', 'continue'
  Pry.commands.alias_command 's', 'step'
  Pry.commands.alias_command 'n', 'next'
  Pry.commands.alias_command 'f', 'finish'
end

if defined?(AwesomePrint)
  # always calls `ap()` as default output
  # AwesomePrint.pry!
end

# User specific
local = File.join(Dir.pwd, '.pryrc.private')
load local if local != __FILE__ && File.exist?(local)
